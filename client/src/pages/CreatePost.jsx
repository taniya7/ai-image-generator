import React, { useState } from "react";
import FormField from "../components/FormField";
import Loader from "../components/Loader";
import preview from "../assets/preview.png";
import { getRandomPrompt } from "../utils";
import { useNavigate } from "react-router-dom";

const CreatePost = ({ setAlertMessage }) => {
  const navigate = useNavigate();
  const [form, setForm] = useState({
    name: "",
    prompt: "",
    image: "",
  });

  const [isGeneratingImg, setGeneratingImg] = useState(false);
  const [isSharing, setSharing] = useState(false);

  function handleChange(e) {
    setForm({ ...form, [e.target.name]: e.target.value });
  }

  function handleSurpriseMe() {
    const randomPrompt = getRandomPrompt(form.prompt);
    setForm({ ...form, prompt: randomPrompt });
  }

  const handleGenerateImg = async () => {
    if (form.prompt) {
      try {
        setGeneratingImg(true);

        const response = await fetch("http://localhost:8080/api/ai", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ prompt: form.prompt }),
        });

        const result = await response.json();

        if (result) {
          setForm({ ...form, image: `data:image/png;base64,${result.data}` });
          console.log("Image generated : ", result);
        }
      } catch (error) {
        setAlertMessage("Image could not be generated!");
        console.log("Image not generated : ", error);
      } finally {
        setGeneratingImg(false);
      }
    } else {
      setAlertMessage("Please enter a prompt!");
    }
  };

  const handleShareImg = async (e) => {
    e.preventDefault();

    if (form.name && form.prompt && form.image) {
      try {
        setSharing(true);

        const response = await fetch("http://localhost:8080/api/post", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(form),
        });

        const result = await response.json();

        if (result) {
          setForm({ ...form, result });
          navigate("/");
          console.log("New post added to Commnunity : ", result);
        }
      } catch (error) {
        setAlertMessage("New post could not be added to Commnunity!");
        console.log("New post not added to Commnunity : ", error);
      } finally {
        setSharing(false);
      }
    } else {
      setAlertMessage("Please enter name, prompt and generate image!");
    }
  };

  return (
    <section className="max-w-7xl mx-auto">
      {/* Heading and Subheading */}
      <div>
        <h1 className="text-[34px] text-[#222328] font-extrabold">Create</h1>
        <p className="text-[16px] text-[#666e75] mt-1">
          Create imaginative and visually stunning images generated by AI and
          share them with the community.
        </p>
      </div>

      {/* Form */}
      <form className="max-w-3xl mt-12">
        <div className="flex flex-col gap-5">
          <FormField
            labelName="Your Name"
            type="text"
            name="name"
            value={form.name}
            placeholder="Eg. John Doe"
            handleChange={handleChange}
          />
          <FormField
            labelName="Your Prompt"
            type="text"
            name="prompt"
            value={form.prompt}
            placeholder="Eg. an armchair in the shape of an avocado"
            handleChange={handleChange}
            isSurpriseMe
            handleSurpriseMe={handleSurpriseMe}
          />

          {/* if image is present ? show photo : show preview */}
          <div className="relative flex justify-center items-center text-gray-900 text-sm w-64 h-64 p-3 border border-gray-300 rounded-lg bg-gray-50 focus:border-indigo-500 focus:ring-1 focus:ring-indigo-500 outline-none">
            {form.image ? (
              <img
                src={form.image}
                alt={form.prompt}
                className="w-full h-full object-contain"
              />
            ) : (
              <img
                src={preview}
                alt="preview"
                className="w-full h-full object-contain opacity-40"
              />
            )}

            {/* if image is generating && show <Loader/> */}
            {isGeneratingImg && (
              <div className="absolute inset-0 z-0 flex justify-center items-center bg-black opacity-50 rounded-lg ">
                <Loader />
              </div>
            )}
          </div>

          {/* Button to generate image */}
          <div className="mt-3">
            <button
              type="button"
              onClick={handleGenerateImg}
              className="text-white bg-green-700 text-sm font-medium w-full px-4 py-2 text-center rounded-md sm:w-auto"
            >
              {isGeneratingImg ? "Generating..." : "Generate"}{" "}
            </button>
          </div>

          {/* Button to share image */}
          <div className="mt-5">
            <p className="text-[#666e75]">
              Once you have generated an AI image, you can share it with others
              in the community.
            </p>
            <button
              type="button"
              onClick={handleShareImg}
              className="mt-2 text-white bg-[#6469ff] text-sm font-medium w-full px-4 py-2 text-center rounded-md sm:w-auto"
            >
              {isSharing ? "Sharing..." : "Share with Community"}
            </button>
          </div>
        </div>
      </form>
    </section>
  );
};

export default CreatePost;
